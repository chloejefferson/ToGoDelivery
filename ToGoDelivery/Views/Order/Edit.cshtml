@model ToGoDelivery.Models.Order.OrderEdit

@{
    ViewBag.Title = "Edit";
}
<div class="jumbotron" style="background-color:white">
    <h2 style="font-weight:bold">Edit</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Order Edit</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.OrderId)

            <div class="form-group">
                @Html.LabelFor(model => model.IsFavorite, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsFavorite)
                        @Html.ValidationMessageFor(model => model.IsFavorite, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            @if (User.IsInRole("Admin"))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsPrepared, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsPrepared)
                            @Html.ValidationMessageFor(model => model.IsPrepared, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsFinalized, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsFinalized)
                            @Html.ValidationMessageFor(model => model.IsFinalized, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @if (User.IsInRole("Admin"))
        {
            <div>
                @Html.ActionLink("Back to List", "AdminIndex") |
                @Html.ActionLink("Order Detail", "Details", new { id = Model.OrderId })

            </div>
        }
        else
        {
            <div>
                @Html.ActionLink("Back to Your Orders", "CustomerIndex") |
                @Html.ActionLink("Order Detail", "Details", new { id = Model.OrderId })
            </div>
        }

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
